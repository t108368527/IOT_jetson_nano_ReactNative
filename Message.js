import React from 'react';
import {
  View,
  TouchableOpacity,
  Text,
  DeviceEventEmitter,
  Button,
  Image,
  Alert,
  StyleSheet,
} from 'react-native';
import {RedisClient} from 'react-native-redispubsub';
import base64 from 'react-native-base64';
export default class Message extends React.Component {
    // message(){
    //     RedisClient.redisConnect('140.109.20.33:8987', 'iotclassj6xul6');
    //     // if(RedisClient.publish('iotclass', 'test')){
    //     DeviceEventEmitter.addListener('iotclass', function (e) {
    //         console.log(e);
    //     });
    //     // }
    // }
    uri = "";
    constructor(props) {
        super(props);
        this.state = {
            image: "",
            name:"",
            prob:""
        };
    }
    componentDidMount() {
        //接收資料 訂閱iotclass 並decode出照片
        RedisClient.redisConnect('140.109.20.33:8987', 'iotclassj6xul6');
        RedisClient.subscribe('iotclass');
        DeviceEventEmitter.addListener('iotclass', function (e) {
            if(e){
                // const name = JSON.parse(e).name//名稱
                this.setState({
                    image: JSON.parse(e).image,
                    name:JSON.parse(e).name,
                    prob:JSON.parse(e).prob,
                }); //照片
                // Alert.alert(<Image resizeMode="stretch" style={{margin:10,width:200, height: 200}}source={{uri: `data:image/png;base64,${this.state.image}`}} />);
            }
            // Alert.alert(name);
        }.bind(this)); //如何解决Uncaught TypeError: this.setState is not a function？ https://blog.csdn.net/csdn_haow/article/details/56677161
    }
    led_on(){
        RedisClient.redisConnect('140.109.20.33:8987', 'iotclassj6xul6');
        RedisClient.publish('iotclass_led','on');
        Alert.alert("LED on");
    }

    led_off(){
        RedisClient.redisConnect('140.109.20.33:8987', 'iotclassj6xul6');
        RedisClient.publish('iotclass_led','off');
        console.log("LED off");
    }

    render(){
        // return <View>{this.message()}</View>
        return (
            <View style={styles.container}>
                <View style={{margin: 10}}>
                    <Text>{this.state.prob}</Text>
                    <Text>{this.state.name}</Text>
                    <Image resizeMode="stretch" style={{margin:10,width:200, height: 200}} source={{uri: `data:image/png;base64,${this.state.image}`}} />
                </View>
                <View style={{margin: 10}}>
                    <Button onPress={this.led_on} title="開啟LED"/>
                </View>
                <View style={{margin: 10}}>
                    <Button onPress={this.led_off} color="#FC0000" title="關閉LED"/>
                </View>
            </View>
        );
    }
}
const styles = StyleSheet.create({
    container: {
      flex: 1,
      justifyContent: 'center',
    //   margin: 10,
      backgroundColor:"#545454"
    },
  });